// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TrackMenu1 renders correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Image
    source={
      {
        "testUri": "../../../MetricMorphLogo.png",
      }
    }
    style={
      {
        "marginBottom": 75,
        "marginTop": 80,
      }
    }
  />
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "green",
        "borderRadius": 25,
        "flexDirection": "center",
        "height": 60,
        "justifyContent": "center",
        "margin": 20,
        "padding": 10,
        "width": 280,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 20,
            "textAlign": "center",
          }
        }
      >
        CONVERT RACE
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "green",
        "borderRadius": 25,
        "flexDirection": "center",
        "height": 60,
        "justifyContent": "center",
        "margin": 20,
        "padding": 10,
        "width": 280,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 20,
            "textAlign": "center",
          }
        }
      >
        SPLITS
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "green",
        "borderRadius": 25,
        "flexDirection": "center",
        "height": 60,
        "justifyContent": "center",
        "margin": 20,
        "padding": 10,
        "width": 280,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 20,
            "textAlign": "center",
          }
        }
      >
        EFFORT
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderWidth": 1,
        "bottom": 0,
        "flex": 1,
        "flexDirection": "row",
        "height": "12%",
        "left": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 20,
            "height": 100,
            "padding": 37,
            "textAlign": "center",
            "width": 188,
          }
        }
      >
         Swim Menu 
      </Text>
    </View>
    <Text
      style={
        {
          "fontSize": 20,
          "height": 100,
          "padding": 37,
          "textAlign": "center",
          "width": 188,
        }
      }
    >
      <Text
        style={
          {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
         Track Menu 
      </Text>
    </Text>
  </View>
</View>
`;
